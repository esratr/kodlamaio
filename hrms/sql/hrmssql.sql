-- This script was generated by a beta version of the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE public.candidate_users
(
    user_id integer NOT NULL,
    name character varying(50) NOT NULL,
    surname character varying(50) NOT NULL,
    national_identity character varying(11) NOT NULL,
    birth_year character varying(4) NOT NULL,
    verify boolean,
    PRIMARY KEY (user_id)
);

CREATE TABLE public.employers_users
(
    user_id integer NOT NULL,
    company_name character varying(100) NOT NULL,
    web_adress character varying(50) NOT NULL,
    phone_number character varying(11) NOT NULL,
    verify boolean,
    user_confirm "char",
    PRIMARY KEY (user_id)
);

CREATE TABLE public.job_position
(
    id integer NOT NULL,
    positions character varying(50) NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE public.staff_user
(
    user_id integer NOT NULL,
    name character varying(50) NOT NULL,
    surname character varying(50) NOT NULL,
    verify boolean,
    PRIMARY KEY (user_id)
);

CREATE TABLE public.users
(
    id integer NOT NULL,
    email character varying(100) NOT NULL,
    password character varying(16) NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE public.verify_code
(
    id serial NOT NULL,
    verify_code character varying NOT NULL,
    is_confirmed boolean,
    created_date date,
    confirmed_date date,
    PRIMARY KEY (id)
);

CREATE TABLE public.verify_candidate_users
(
    id integer NOT NULL,
    candidate_id integer NOT NULL
);

CREATE TABLE public.verify_staff_users
(
    id serial NOT NULL,
    staff_id integer NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE public.verify_employer_users
(
    id serial NOT NULL,
    employer_id integer NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE public.confirmed_employer_users
(
    id serial NOT NULL,
    employer_id integer NOT NULL,
    confirm_staff_user integer NOT NULL,
    confirmed_date timestamp with time zone NOT NULL,
    PRIMARY KEY (id)
);

ALTER TABLE public.candidate_users
    ADD FOREIGN KEY (user_id)
    REFERENCES public.users (id)
    NOT VALID;


ALTER TABLE public.employers_users
    ADD FOREIGN KEY (user_id)
    REFERENCES public.users (id)
    NOT VALID;


ALTER TABLE public.staff_user
    ADD FOREIGN KEY (user_id)
    REFERENCES public.users (id)
    NOT VALID;


ALTER TABLE public.verify_candidate_users
    ADD FOREIGN KEY (id)
    REFERENCES public.verify_code (id)
    NOT VALID;


ALTER TABLE public.verify_staff_users
    ADD FOREIGN KEY (staff_id)
    REFERENCES public.staff_user (user_id)
    NOT VALID;


ALTER TABLE public.confirmed_employer_users
    ADD FOREIGN KEY (employer_id)
    REFERENCES public.employers_users (user_id)
    NOT VALID;


ALTER TABLE public.confirmed_employer_users
    ADD FOREIGN KEY (id)
    REFERENCES public.verify_code (id)
    NOT VALID;


ALTER TABLE public.verify_employer_users
    ADD FOREIGN KEY (id)
    REFERENCES public.verify_code (id)
    NOT VALID;


ALTER TABLE public.verify_employer_users
    ADD FOREIGN KEY (employer_id)
    REFERENCES public.employers_users (user_id)
    NOT VALID;


ALTER TABLE public.verify_staff_users
    ADD FOREIGN KEY (id)
    REFERENCES public.verify_code (id)
    NOT VALID;


ALTER TABLE public.confirmed_employer_users
    ADD FOREIGN KEY (confirm_staff_user)
    REFERENCES public.staff_user (user_id)
    NOT VALID;


ALTER TABLE public.verify_candidate_users
    ADD FOREIGN KEY (candidate_id)
    REFERENCES public.candidate_users (user_id)
    NOT VALID;

END;